/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/base2048/dist/es6/base2048.js":
/*!****************************************************!*\
  !*** ./node_modules/base2048/dist/es6/base2048.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decode\": () => (/* binding */ decode),\n/* harmony export */   \"encode\": () => (/* binding */ encode)\n/* harmony export */ });\n/**\r\n  Base2048 is a binary-to-text encoding optimised for transmitting data\r\n  through Twitter.\r\n*/\r\n\r\n// Z is a number, usually a uint11 but sometimes a uint3\r\n\r\nconst BITS_PER_CHAR = 11; // Base2048 is an 11-bit encoding\r\nconst BITS_PER_BYTE = 8;\r\n\r\n// Compressed representation of inclusive-exclusive ranges of characters used in this encoding.\r\nconst pairStrings = [\r\n  '8:A[a{ÆÇÐÑØÙÞàæçðñøùþÿĐĒĦĨıĲĸĹŁŃŊŌŒŔŦŨƀƠƢƯƱǄǝǞǤǦǶǸȜȞȠȦȴʰͰʹͶ͸ͻ;Ϳ΀Α΢ΣΪαϊϏϐϗϰϳϴϷϹϺЀЂЃЄЇЈЌЏЙКйкѐђѓєїјќџѶѸ҂ҊӁӃӐӔӖӘӚӠӢӨӪӶӸӺ԰Ա՗աևא׫װ׳ؠآاـفً٠٪ٮٰٱٵٹۀہۂۃۓەۖۮ۽ۿ܀ܐܑܒܰݍަޱ޲߀߫ࠀࠖࡀ࡙ࡠ࡫ࢠࢵࢶࢾऄऩपऱलऴवऺऽाॐ॑ॠॢ०॰ॲঁঅ঍এ঑ও঩প঱ল঳শ঺ঽাৎ৏ৠৢ০৲৴৺ৼ৽ਅ਋ਏ਑ਓ਩ਪ਱ਲਲ਼ਵਸ਼ਸ਺ੜ੝੦ੰੲੵઅ઎એ઒ઓ઩પ઱લ઴વ઺ઽાૐ૑ૠૢ૦૰ૹૺଅ଍ଏ଑ଓ଩ପ଱ଲ଴ଵ଺ଽାୟୢ୦୰ୱ୸ஃ஄அ஋எ஑ஒஔக஖ங஛ஜ஝ஞ஠ண஥ந஫ம஺ௐ௑௦௳అ఍ఎ఑ఒ఩ప఺ఽాౘ౛ౠౢ౦౰౸౿ಀಁಅ಍ಎ಑ಒ಩ಪ಴ವ಺ಽಾೞ೟ೠೢ೦೰ೱೳഅ഍എ഑ഒ഻ഽാൎ൏ൔൗ൘ൢ൦൹ൺ඀අ඗ක඲ඳ඼ල඾ව෇෦෰กัาำเๆ๐๚ກ຃ຄ຅ງຉຊ຋ຍຎດຘນຠມ຤ລ຦ວຨສຬອັາຳຽ຾ເ໅໐໚ໞ໠ༀ༁༠༴ཀགྷང཈ཉཌྷཎདྷནབྷམཛྷཝཀྵཪ཭ྈྍကဦဧါဿ၊ၐၖ',\r\n  '08'\r\n];\r\n\r\nconst lookupE = {};\r\nconst lookupD = {};\r\npairStrings.forEach((pairString, r) => {\r\n  // Decompression\r\n  const encodeRepertoire = [];\r\n  pairString.match(/../gu).forEach(pair => {\r\n    const first = pair.codePointAt(0);\r\n    const last = pair.codePointAt(1);\r\n    for (let codePoint = first; codePoint < last; codePoint++) {\r\n      encodeRepertoire.push(String.fromCodePoint(codePoint));\r\n    }\r\n  });\r\n\r\n  const numZBits = BITS_PER_CHAR - BITS_PER_BYTE * r; // 0 -> 11, 1 -> 3\r\n  lookupE[numZBits] = encodeRepertoire;\r\n  encodeRepertoire.forEach((chr, z) => {\r\n    lookupD[chr] = [numZBits, z];\r\n  });\r\n});\r\n\r\nconst encode = uint8Array => {\r\n  const length = uint8Array.length;\r\n\r\n  let str = '';\r\n  let z = 0;\r\n  let numZBits = 0;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    const uint8 = uint8Array[i];\r\n\r\n    // Take most significant bit first\r\n    for (let j = BITS_PER_BYTE - 1; j >= 0; j--) {\r\n      const bit = (uint8 >> j) & 1;\r\n\r\n      z = (z << 1) + bit;\r\n      numZBits++;\r\n\r\n      if (numZBits === BITS_PER_CHAR) {\r\n        str += lookupE[numZBits][z];\r\n        z = 0;\r\n        numZBits = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (numZBits !== 0) {\r\n    // Final bits require special treatment.\r\n\r\n    // byte = bbbcccccccc, numBits = 11, padBits = 0\r\n    // byte = bbcccccccc, numBits = 10, padBits = 1\r\n    // byte = bcccccccc, numBits = 9, padBits = 2\r\n    // byte = cccccccc, numBits = 8, padBits = 3\r\n    // byte = ccccccc, numBits = 7, padBits = 4\r\n    // byte = cccccc, numBits = 6, padBits = 5\r\n    // byte = ccccc, numBits = 5, padBits = 6\r\n    // byte = cccc, numBits = 4, padBits = 7\r\n    // => Pad `byte` out to 11 bits using 1s, then encode as normal (repertoire 0)\r\n\r\n    // byte = ccc, numBits = 3, padBits = 0\r\n    // byte = cc, numBits = 2, padBits = 1\r\n    // byte = c, numBits = 1, padBits = 2\r\n    // => Pad `byte` out to 3 bits using 1s, then encode specially (repertoire 1)\r\n\r\n    while (!(numZBits in lookupE)) {\r\n      z = (z << 1) + 1;\r\n      numZBits++;\r\n    }\r\n\r\n    str += lookupE[numZBits][z];\r\n  }\r\n\r\n  return str\r\n};\r\n\r\nconst decode = str => {\r\n  const length = str.length;\r\n\r\n  // This length is a guess. There's a chance we allocate one more byte here\r\n  // than we actually need. But we can count and slice it off later\r\n  const uint8Array = new Uint8Array(Math.floor(length * BITS_PER_CHAR / BITS_PER_BYTE));\r\n  let numUint8s = 0;\r\n  let uint8 = 0;\r\n  let numUint8Bits = 0;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    const chr = str.charAt(i);\r\n\r\n    if (!(chr in lookupD)) {\r\n      throw new Error(`Unrecognised Base2048 character: ${chr}`)\r\n    }\r\n\r\n    const [numZBits, z] = lookupD[chr];\r\n\r\n    if (numZBits !== BITS_PER_CHAR && i !== length - 1) {\r\n      throw new Error('Secondary character found before end of input at position ' + String(i))\r\n    }\r\n\r\n    // Take most significant bit first\r\n    for (let j = numZBits - 1; j >= 0; j--) {\r\n      const bit = (z >> j) & 1;\r\n\r\n      uint8 = (uint8 << 1) + bit;\r\n      numUint8Bits++;\r\n\r\n      if (numUint8Bits === BITS_PER_BYTE) {\r\n        uint8Array[numUint8s] = uint8;\r\n        numUint8s++;\r\n        uint8 = 0;\r\n        numUint8Bits = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Final padding bits! Requires special consideration!\r\n  // Remember how we always pad with 1s?\r\n  // Note: there could be 0 such bits, check still works though\r\n  if (uint8 !== ((1 << numUint8Bits) - 1)) {\r\n    throw new Error('Padding mismatch')\r\n  }\r\n\r\n  return new Uint8Array(uint8Array.buffer, 0, numUint8s)\r\n};\n\n\n\n\n//# sourceURL=webpack://hatetris/./node_modules/base2048/dist/es6/base2048.js?");

/***/ }),

/***/ "./node_modules/base65536/dist/es6/base65536.js":
/*!******************************************************!*\
  !*** ./node_modules/base65536/dist/es6/base65536.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decode\": () => (/* binding */ decode),\n/* harmony export */   \"encode\": () => (/* binding */ encode)\n/* harmony export */ });\n/**\r\n * Routines for converting binary data into text data which can be sent safely\r\n * through 'Unicode-clean' text systems without information being lost. Analogous\r\n * to Base64 with a significantly larger character repertoire enabling the\r\n * encoding of 2.00 bytes per character (for comparison, Base64 manages 0.75 bytes\r\n * per character).\r\n */\r\n\r\n// Z is a number, usually a uint16 but sometimes a uint8\r\n\r\nconst BITS_PER_CHAR = 16; // Base65536 is an 16-bit encoding\r\nconst BITS_PER_BYTE = 8;\r\n\r\n// Compressed representation of inclusive-exclusive ranges of characters used in this encoding.\r\nconst pairStrings = [\r\n  '㐀䴀一鼀ꄀꐀꔀꘀ𐘀𐜀𒀀𒌀𓀀𓐀𔐀𔘀𖠀𖨀𠀀𨘀',\r\n  'ᔀᘀ'\r\n];\r\n\r\n// Decompression\r\nconst lookupE = {};\r\nconst lookupD = {};\r\npairStrings.forEach((pairString, r) => {\r\n  const numZBits = BITS_PER_CHAR - BITS_PER_BYTE * r; // 0 -> 16, 1 -> 8\r\n  lookupE[numZBits] = {};\r\n  let z2 = 0;\r\n  pairString.match(/../gu).forEach(pair => {\r\n    const [first, last] = [...pair].map(x => x.codePointAt(0));\r\n    for (let codePoint = first; codePoint < last; codePoint++) {\r\n      const chr = String.fromCodePoint(codePoint);\r\n\r\n      // SPECIAL CASE: flip the bytes around, because Base65536 was constructed to take the bytes\r\n      // in the wrong order originally\r\n      const z = numZBits === BITS_PER_CHAR ? 256 * (z2 % 256) + (z2 >> 8) : z2;\r\n\r\n      lookupE[numZBits][z] = chr;\r\n      lookupD[chr] = [numZBits, z];\r\n      z2++;\r\n    }\r\n  });\r\n});\r\n\r\nconst encode = uint8Array => {\r\n  const length = uint8Array.length;\r\n\r\n  let str = '';\r\n  let z = 0;\r\n  let numZBits = 0;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    const uint8 = uint8Array[i];\r\n\r\n    // Take most significant bit first\r\n    for (let j = BITS_PER_BYTE - 1; j >= 0; j--) {\r\n      const bit = (uint8 >> j) & 1;\r\n\r\n      z = (z << 1) + bit;\r\n      numZBits++;\r\n\r\n      if (numZBits === BITS_PER_CHAR) {\r\n        str += lookupE[numZBits][z];\r\n        z = 0;\r\n        numZBits = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (numZBits !== 0) {\r\n    // Final bits require special treatment.\r\n    while (!(numZBits in lookupE)) {\r\n      z = (z << 1) + 1;\r\n      numZBits++;\r\n    }\r\n\r\n    str += lookupE[numZBits][z];\r\n  }\r\n\r\n  return str\r\n};\r\n\r\nconst decode = str => {\r\n  const length = str.length;\r\n\r\n  // This length is a guess. There's a chance we allocate one more byte here\r\n  // than we actually need. But we can count and slice it off later\r\n  const uint8Array = new Uint8Array(Math.floor(length * BITS_PER_CHAR / BITS_PER_BYTE));\r\n  let numUint8s = 0;\r\n  let uint8 = 0;\r\n  let numUint8Bits = 0;\r\n  let shouldBeNoMoreChars = false;\r\n\r\n  for (const chr of str) {\r\n    if (shouldBeNoMoreChars) {\r\n      throw new Error('Secondary character found before end of input')\r\n    }\r\n\r\n    if (!(chr in lookupD)) {\r\n      throw new Error(`Unrecognised Base65536 character: ${chr}`)\r\n    }\r\n\r\n    const [numZBits, z] = lookupD[chr];\r\n\r\n    // Take most significant bit first\r\n    for (let j = numZBits - 1; j >= 0; j--) {\r\n      const bit = (z >> j) & 1;\r\n\r\n      uint8 = (uint8 << 1) + bit;\r\n      numUint8Bits++;\r\n\r\n      if (numUint8Bits === BITS_PER_BYTE) {\r\n        uint8Array[numUint8s] = uint8;\r\n        numUint8s++;\r\n        uint8 = 0;\r\n        numUint8Bits = 0;\r\n      }\r\n    }\r\n\r\n    if (numZBits !== BITS_PER_CHAR) {\r\n      shouldBeNoMoreChars = true;\r\n    }\r\n  }\r\n\r\n  // Final padding bits! Requires special consideration!\r\n  // Remember how we always pad with 1s?\r\n  // Note: there could be 0 such bits, check still works though\r\n  if (uint8 !== ((1 << numUint8Bits) - 1)) {\r\n    throw new Error('Padding mismatch')\r\n  }\r\n\r\n  return new Uint8Array(uint8Array.buffer, 0, numUint8s)\r\n};\n\n\n\n\n//# sourceURL=webpack://hatetris/./node_modules/base65536/dist/es6/base65536.js?");

/***/ }),

/***/ "./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/***/ ((module, exports) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n\n\n//# sourceURL=webpack://hatetris/./node_modules/classnames/index.js?");

/***/ }),

/***/ "./src/components/Game/Game.css":
/*!**************************************!*\
  !*** ./src/components/Game/Game.css ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://hatetris/./src/components/Game/Game.css?");

/***/ }),

/***/ "./src/components/Well/Well.css":
/*!**************************************!*\
  !*** ./src/components/Well/Well.css ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://hatetris/./src/components/Well/Well.css?");

/***/ }),

/***/ "./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://hatetris/./src/index.css?");

/***/ }),

/***/ "./src/components/Game/Game.tsx":
/*!**************************************!*\
  !*** ./src/components/Game/Game.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _replay_codecs_hatetris_replay_codec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../replay-codecs/hatetris-replay-codec */ \"./src/replay-codecs/hatetris-replay-codec.ts\");\n/* harmony import */ var _Well_Well__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Well/Well */ \"./src/components/Well/Well.tsx\");\n/* harmony import */ var _Game_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Game.css */ \"./src/components/Game/Game.css\");\n/**\n  HATETRIS instance builder\n*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar minWidth = 4;\nvar Game = /** @class */ (function (_super) {\n    __extends(Game, _super);\n    function Game(props) {\n        var _this = _super.call(this, props) || this;\n        var _a = _this.props, rotationSystem = _a.rotationSystem, bar = _a.bar, wellDepth = _a.wellDepth, wellWidth = _a.wellWidth, EnemyAi = _a.EnemyAi;\n        if (rotationSystem.rotations.length < 1) {\n            throw Error('Have to have at least one piece!');\n        }\n        if (wellDepth < bar) {\n            throw Error(\"Can't have well with depth \" + String(wellDepth) + ' less than bar at ' + String(bar));\n        }\n        if (wellWidth < minWidth) {\n            throw Error(\"Can't have well with width \" + String(wellWidth) + ' less than ' + String(minWidth));\n        }\n        var enemyAi = EnemyAi(_this);\n        var firstWell = Array(wellDepth).fill(0);\n        var firstWellState = {\n            well: firstWell,\n            score: 0,\n            piece: rotationSystem.placeNewPiece(wellWidth, enemyAi(firstWell))\n        };\n        _this.state = {\n            enemyAi: enemyAi,\n            firstWellState: firstWellState,\n            mode: 'GAME_OVER',\n            wellStateId: -1,\n            wellStates: [],\n            replay: [],\n            replayTimeoutId: undefined\n        };\n        _this.handleClickStart = _this.handleClickStart.bind(_this);\n        _this.handleClickReplay = _this.handleClickReplay.bind(_this);\n        _this.inputReplayStep = _this.inputReplayStep.bind(_this);\n        _this.handleLeft = _this.handleLeft.bind(_this);\n        _this.handleRight = _this.handleRight.bind(_this);\n        _this.handleUp = _this.handleUp.bind(_this);\n        _this.handleDown = _this.handleDown.bind(_this);\n        _this.handleUndo = _this.handleUndo.bind(_this);\n        _this.handleRedo = _this.handleRedo.bind(_this);\n        _this.handleDocumentKeyDown = _this.handleDocumentKeyDown.bind(_this);\n        return _this;\n    }\n    /**\n      Input {wellState, piece} and a move, return\n      the new {wellState, piece}.\n    */\n    Game.prototype.getNextState = function (wellState, move) {\n        var _a = this.props, rotationSystem = _a.rotationSystem, bar = _a.bar, wellDepth = _a.wellDepth, wellWidth = _a.wellWidth;\n        var nextWell = wellState.well;\n        var nextScore = wellState.score;\n        var nextPiece = {\n            id: wellState.piece.id,\n            x: wellState.piece.x,\n            y: wellState.piece.y,\n            o: wellState.piece.o\n        };\n        // apply transform (very fast now)\n        if (move === 'L') {\n            nextPiece.x--;\n        }\n        if (move === 'R') {\n            nextPiece.x++;\n        }\n        if (move === 'D') {\n            nextPiece.y++;\n        }\n        if (move === 'U') {\n            nextPiece.o = (nextPiece.o + 1) % 4;\n        }\n        var orientation = rotationSystem.rotations[nextPiece.id][nextPiece.o];\n        var xActual = nextPiece.x + orientation.xMin;\n        var yActual = nextPiece.y + orientation.yMin;\n        if (xActual < 0 || // off left side\n            xActual + orientation.xDim > wellWidth || // off right side\n            yActual < 0 || // off top (??)\n            yActual + orientation.yDim > wellDepth || // off bottom\n            orientation.rows.some(function (row, y) {\n                return wellState.well[yActual + y] & (row << xActual);\n            }) // obstruction\n        ) {\n            if (move === 'D') {\n                // Lock piece\n                nextWell = wellState.well.slice();\n                var orientation_1 = rotationSystem.rotations[wellState.piece.id][wellState.piece.o];\n                // this is the top left point in the bounding box of this orientation of this piece\n                var xActual_1 = wellState.piece.x + orientation_1.xMin;\n                var yActual_1 = wellState.piece.y + orientation_1.yMin;\n                // row by row bitwise line alteration\n                for (var row = 0; row < orientation_1.yDim; row++) {\n                    // can't negative bit-shift, but alas X can be negative\n                    nextWell[yActual_1 + row] |= (orientation_1.rows[row] << xActual_1);\n                }\n                // check for complete lines now\n                // NOTE: completed lines don't count if you've lost\n                for (var row = 0; row < orientation_1.yDim; row++) {\n                    if (yActual_1 >= bar &&\n                        nextWell[yActual_1 + row] === (1 << wellWidth) - 1) {\n                        // move all lines above this point down\n                        for (var k = yActual_1 + row; k > 1; k--) {\n                            nextWell[k] = nextWell[k - 1];\n                        }\n                        // insert a new blank line at the top\n                        // though of course the top line will always be blank anyway\n                        nextWell[0] = 0;\n                        nextScore++;\n                    }\n                }\n                nextPiece = null;\n            }\n            else {\n                // No move\n                nextPiece = wellState.piece;\n            }\n        }\n        return {\n            well: nextWell,\n            score: nextScore,\n            piece: nextPiece\n        };\n    };\n    Game.prototype.handleClickStart = function () {\n        var _a = this.state, firstWellState = _a.firstWellState, replayTimeoutId = _a.replayTimeoutId;\n        // there may be a replay in progress, this\n        // must be killed\n        if (replayTimeoutId) {\n            clearTimeout(replayTimeoutId);\n        }\n        // clear the field and get ready for a new game\n        this.setState({\n            mode: 'PLAYING',\n            wellStateId: 0,\n            wellStates: [firstWellState],\n            replay: [],\n            replayTimeoutId: undefined\n        });\n    };\n    Game.prototype.handleClickReplay = function () {\n        var replayTimeout = this.props.replayTimeout;\n        var _a = this.state, firstWellState = _a.firstWellState, replayTimeoutId = _a.replayTimeoutId;\n        // there may be a replay in progress, this\n        // must be killed\n        if (replayTimeoutId) {\n            clearTimeout(replayTimeoutId);\n            replayTimeoutId = undefined;\n        }\n        // user inputs replay string\n        var string = window.prompt();\n        var replay = _replay_codecs_hatetris_replay_codec__WEBPACK_IMPORTED_MODULE_1__.default.decode(string);\n        // TODO: what if the replay is bad?\n        var wellStateId = 0;\n        replayTimeoutId = wellStateId in replay\n            ? setTimeout(this.inputReplayStep, replayTimeout)\n            : undefined;\n        var mode = wellStateId in replay ? 'REPLAYING' : 'PLAYING';\n        // GO\n        this.setState({\n            mode: mode,\n            wellStateId: wellStateId,\n            wellStates: [firstWellState],\n            replay: replay,\n            replayTimeoutId: replayTimeoutId\n        });\n    };\n    Game.prototype.inputReplayStep = function () {\n        var replayTimeout = this.props.replayTimeout;\n        var _a = this.state, mode = _a.mode, replay = _a.replay, wellStateId = _a.wellStateId;\n        var nextReplayTimeoutId;\n        if (mode === 'REPLAYING') {\n            this.handleRedo();\n            if (wellStateId + 1 in replay) {\n                nextReplayTimeoutId = setTimeout(this.inputReplayStep, replayTimeout);\n            }\n        }\n        else {\n            console.warn('Ignoring input replay step because mode is', mode);\n        }\n        this.setState({\n            replayTimeoutId: nextReplayTimeoutId\n        });\n    };\n    // Accepts the input of a move and attempts to apply that\n    // transform to the live piece in the live well.\n    // Returns the new state.\n    Game.prototype.handleMove = function (move) {\n        var _a = this.props, bar = _a.bar, rotationSystem = _a.rotationSystem, wellWidth = _a.wellWidth;\n        var _b = this.state, enemyAi = _b.enemyAi, mode = _b.mode, replay = _b.replay, wellStateId = _b.wellStateId, wellStates = _b.wellStates;\n        var nextWellStateId = wellStateId + 1;\n        var nextReplay;\n        var nextWellStates;\n        if (wellStateId in replay && move === replay[wellStateId]) {\n            nextReplay = replay;\n            nextWellStates = wellStates;\n        }\n        else {\n            // Push the new move\n            nextReplay = replay.slice(0, wellStateId).concat([move]);\n            // And truncate the future\n            nextWellStates = wellStates.slice(0, wellStateId + 1);\n        }\n        if (!(nextWellStateId in nextWellStates)) {\n            var nextWellState_1 = this.getNextState(nextWellStates[wellStateId], move);\n            nextWellStates = nextWellStates.slice().concat([nextWellState_1]);\n        }\n        var nextWellState = nextWellStates[nextWellStateId];\n        // Is the game over?\n        // It is impossible to get bits at row (bar - 2) or higher without getting a bit at row (bar - 1),\n        // so there is only one line which we need to check.\n        var gameIsOver = nextWellState.well[bar - 1] !== 0;\n        var nextMode = gameIsOver ? 'GAME_OVER' : mode;\n        // no live piece? make a new one\n        // suited to the new world, of course\n        if (nextWellState.piece === null && nextMode !== 'GAME_OVER') {\n            // TODO: `nextWellState.well` should be more complex and contain colour\n            // information, whereas the well passed to `enemyAi` should be a simple\n            // array of integers\n            nextWellState.piece = rotationSystem.placeNewPiece(wellWidth, enemyAi(nextWellState.well));\n        }\n        this.setState({\n            mode: nextMode,\n            wellStateId: nextWellStateId,\n            wellStates: nextWellStates,\n            replay: nextReplay\n        });\n    };\n    Game.prototype.handleLeft = function () {\n        var mode = this.state.mode;\n        if (mode === 'PLAYING') {\n            this.handleMove('L');\n        }\n        else {\n            console.warn('Ignoring event L because mode is', mode);\n        }\n    };\n    Game.prototype.handleRight = function () {\n        var mode = this.state.mode;\n        if (mode === 'PLAYING') {\n            this.handleMove('R');\n        }\n        else {\n            console.warn('Ignoring event R because mode is', mode);\n        }\n    };\n    Game.prototype.handleDown = function () {\n        var mode = this.state.mode;\n        if (mode === 'PLAYING') {\n            this.handleMove('D');\n        }\n        else {\n            console.warn('Ignoring event D because mode is', mode);\n        }\n    };\n    Game.prototype.handleUp = function () {\n        var mode = this.state.mode;\n        if (mode === 'PLAYING') {\n            this.handleMove('U');\n        }\n        else {\n            console.warn('Ignoring event U because mode is', mode);\n        }\n    };\n    Game.prototype.handleUndo = function () {\n        var _a = this.state, replayTimeoutId = _a.replayTimeoutId, wellStateId = _a.wellStateId, wellStates = _a.wellStates;\n        // There may be a replay in progress, this\n        // must be killed\n        if (replayTimeoutId) {\n            clearTimeout(replayTimeoutId);\n            this.setState({\n                replayTimeoutId: undefined\n            });\n        }\n        var nextWellStateId = wellStateId - 1;\n        if (nextWellStateId in wellStates) {\n            this.setState({\n                mode: 'PLAYING',\n                wellStateId: nextWellStateId,\n                replayTimeoutId: undefined\n            });\n        }\n        else {\n            console.warn('Ignoring undo event because start of history has been reached');\n        }\n    };\n    Game.prototype.handleRedo = function () {\n        var _a = this.state, mode = _a.mode, replay = _a.replay, wellStateId = _a.wellStateId;\n        if (mode === 'PLAYING' || mode === 'REPLAYING') {\n            if (wellStateId in replay) {\n                this.handleMove(replay[wellStateId]);\n            }\n            else {\n                console.warn('Ignoring redo event because end of history has been reached');\n            }\n        }\n        else {\n            console.warn('Ignoring redo event because mode is', mode);\n        }\n    };\n    Game.prototype.handleDocumentKeyDown = function (event) {\n        if (event.key === 'Left' || event.key === 'ArrowLeft') {\n            this.handleLeft();\n        }\n        if (event.key === 'Right' || event.key === 'ArrowRight') {\n            this.handleRight();\n        }\n        if (event.key === 'Down' || event.key === 'ArrowDown') {\n            this.handleDown();\n        }\n        if (event.key === 'Up' || event.key === 'ArrowUp') {\n            this.handleUp();\n        }\n        if (event.key === 'Z' && event.ctrlKey === true) {\n            this.handleUndo();\n        }\n        if (event.key === 'Y' && event.ctrlKey === true) {\n            this.handleRedo();\n        }\n    };\n    Game.prototype.render = function () {\n        var _a = this.props, bar = _a.bar, rotationSystem = _a.rotationSystem, wellDepth = _a.wellDepth, wellWidth = _a.wellWidth;\n        var _b = this.state, mode = _b.mode, replay = _b.replay, wellStateId = _b.wellStateId, wellStates = _b.wellStates;\n        var wellState = wellStateId === -1 ? null : wellStates[wellStateId];\n        var score = wellState && wellState.score;\n        var replayOut = mode === 'GAME_OVER' && replay.length > 0 && 'replay of last game: ' + _replay_codecs_hatetris_replay_codec__WEBPACK_IMPORTED_MODULE_1__.default.encode(replay);\n        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: 'game' },\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: 'game__left' },\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Well_Well__WEBPACK_IMPORTED_MODULE_2__.default, { bar: bar, rotationSystem: rotationSystem, wellDepth: wellDepth, wellWidth: wellWidth, wellState: wellState, onClickL: this.handleLeft, onClickR: this.handleRight, onClickU: this.handleUp, onClickD: this.handleDown, onClickZ: this.handleUndo, onClickY: this.handleRedo })),\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: 'game__right' },\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", { className: 'game__paragraph' },\n                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", { href: 'https://github.com/unrealwill/lovetris' }, \"You're playing LOVETRIS by GistNoesis\")),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", { className: 'game__paragraph' },\n                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { className: 'game__start-button', type: 'button', onClick: this.handleClickStart }, \"start new game\")),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", { className: 'game__paragraph' },\n                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { type: 'button', className: 'game__replay-button', onClick: this.handleClickReplay }, \"show a replay\")),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", { className: 'game__paragraph' },\n                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", { className: 'e2e__score' }, score)),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", { className: 'game__paragraph' },\n                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", { className: 'game__replay-out e2e__replay-out' }, replayOut)),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: 'game__spacer' }),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", { className: 'game__paragraph' },\n                    \"Undo: Ctrl+Z\",\n                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"br\", null),\n                    \"Redo: Ctrl+Y\",\n                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"br\", null)),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", { className: 'game__paragraph' },\n                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", { href: 'https://github.com/unrealwill/lovetris' }, \"source code\")),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", { className: 'game__paragraph' },\n                    \"replays encoded using \",\n                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", { href: 'https://github.com/qntm/base2048' }, \"Base2048\"),\n                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"br\", null)))));\n    };\n    Game.prototype.componentDidMount = function () {\n        document.addEventListener('keydown', this.handleDocumentKeyDown);\n    };\n    Game.prototype.componentWillUnmount = function () {\n        var replayTimeoutId = this.state.replayTimeoutId;\n        if (replayTimeoutId) {\n            clearTimeout(replayTimeoutId);\n        }\n        document.removeEventListener('keydown', this.handleDocumentKeyDown);\n    };\n    return Game;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component));\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Game);\n\n\n//# sourceURL=webpack://hatetris/./src/components/Game/Game.tsx?");

/***/ }),

/***/ "./src/components/Well/Well.tsx":
/*!**************************************!*\
  !*** ./src/components/Well/Well.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Well_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Well.css */ \"./src/components/Well/Well.css\");\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (props) {\n    var bar = props.bar, rotationSystem = props.rotationSystem, wellDepth = props.wellDepth, wellWidth = props.wellWidth, onClickL = props.onClickL, onClickR = props.onClickR, onClickU = props.onClickU, onClickD = props.onClickD, onClickZ = props.onClickZ, onClickY = props.onClickY, wellState = props.wellState;\n    var well = wellState && wellState.well;\n    var piece = wellState && wellState.piece;\n    var cellses = [];\n    for (var y = 0; y < wellDepth; y++) {\n        var cells = [];\n        for (var x = 0; x < wellWidth; x++) {\n            var landed = well !== null && (well[y] & (1 << x)) !== 0;\n            var live = void 0;\n            if (piece === null) {\n                live = false;\n            }\n            else {\n                var orientation_1 = rotationSystem.rotations[piece.id][piece.o];\n                var y2 = y - piece.y - orientation_1.yMin;\n                var x2 = x - piece.x - orientation_1.xMin;\n                live = (y2 >= 0 && y2 < orientation_1.yDim &&\n                    x2 >= 0 && x2 < orientation_1.xDim &&\n                    (orientation_1.rows[y2] & (1 << x2)) !== 0);\n            }\n            cells.push({ landed: landed, live: live });\n        }\n        cellses.push(cells);\n    }\n    // put some buttons on the playing field\n    var buttons = [\n        { y: 0, x: 0, handleClick: onClickZ, symbol: '\\u21B6', title: 'Press Ctrl+Z to undo' },\n        { y: 0, x: 1, handleClick: onClickU, symbol: '\\u27F3', title: 'Press Up to rotate' },\n        { y: 0, x: 2, handleClick: onClickY, symbol: '\\u21B7', title: 'Press Ctrl+Y to redo' },\n        { y: 1, x: 0, handleClick: onClickL, symbol: '\\u2190', title: 'Press Left to move left' },\n        { y: 1, x: 1, handleClick: onClickD, symbol: '\\u2193', title: 'Press Down to move down' },\n        { y: 1, x: 2, handleClick: onClickR, symbol: '\\u2192', title: 'Press Right to move right' }\n    ];\n    buttons.forEach(function (button) {\n        cellses[button.y][button.x].handleClick = button.handleClick;\n        cellses[button.y][button.x].symbol = button.symbol;\n        cellses[button.y][button.x].title = button.title;\n    });\n    return (react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"table\", null,\n        react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"tbody\", null, cellses.map(function (cells, y) { return (react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"tr\", { key: y }, cells.map(function (cell, x) { return (react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"td\", { key: x, className: classnames__WEBPACK_IMPORTED_MODULE_0___default()({\n                well__cell: true,\n                'well__cell--bar': y === bar,\n                'well__cell--manual': cell.handleClick,\n                'well__cell--landed': cell.landed,\n                'well__cell--live': cell.live\n            }), onClick: cell.handleClick, title: cell.title }, cell.symbol)); }))); }))));\n});\n\n\n//# sourceURL=webpack://hatetris/./src/components/Well/Well.tsx?");

/***/ }),

/***/ "./src/enemy-ais/hatetris-ai.ts":
/*!**************************************!*\
  !*** ./src/enemy-ais/hatetris-ai.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Hatetris0\": () => (/* binding */ Hatetris0),\n/* harmony export */   \"Hatetris1\": () => (/* binding */ Hatetris1)\n/* harmony export */ });\n\nvar moves = ['L', 'R', 'D', 'U'];\nvar HatetrisAi = function (options) { return function (game) {\n    var _a = game.props, rotationSystem = _a.rotationSystem, wellDepth = _a.wellDepth, wellWidth = _a.wellWidth;\n    /**\n      Generate a unique integer to describe the position and orientation of this piece.\n      `x` varies between -3 and (`wellWidth` - 1) inclusive, so range = `wellWidth` + 3\n      `y` varies between 0 and (`wellDepth` + 2) inclusive, so range = `wellDepth` + 3\n      `o` varies between 0 and 3 inclusive, so range = 4\n    */\n    var hashCode = function (x, y, o) {\n        return (x * (wellDepth + 3) + y) * 4 + o;\n    };\n    /**\n      Given a well and a piece ID, find all possible places where it could land\n      and return the array of \"possible future\" states. All of these states\n      will have `null` `piece` because the piece is landed; some will have\n      an increased `score`.\n    */\n    var getPossibleFutures = function (well, pieceId) {\n        var piece = rotationSystem.placeNewPiece(wellWidth, pieceId);\n        // move the piece down to a lower position before we have to\n        // start pathfinding for it\n        // move through empty rows\n        while (piece.y + 4 < wellDepth && // piece is above the bottom\n            well[piece.y + 4] === 0 // nothing immediately below it\n        ) {\n            piece = game.getNextState({\n                well: well,\n                score: 0,\n                piece: piece\n            }, 'D').piece;\n        }\n        // push first position\n        var piecePositions = [piece];\n        var seen = new Set();\n        seen.add(hashCode(piece.x, piece.y, piece.o));\n        var possibleFutures = [];\n        // a simple for loop won't work here because\n        // we are increasing the list as we go\n        var i = 0;\n        while (i < piecePositions.length) {\n            piece = piecePositions[i];\n            // apply all possible moves\n            moves.forEach(function (move) {\n                var nextState = game.getNextState({\n                    well: well,\n                    score: 0,\n                    piece: piece\n                }, move);\n                var newPiece = nextState.piece;\n                if (newPiece === null) {\n                    // piece locked? better add that to the list\n                    // do NOT check locations, they aren't significant here\n                    possibleFutures.push(nextState);\n                }\n                else {\n                    // transform succeeded?\n                    // new location? append to list\n                    // check locations, they are significant\n                    var newHashCode = hashCode(newPiece.x, newPiece.y, newPiece.o);\n                    if (!seen.has(newHashCode)) {\n                        piecePositions.push(newPiece);\n                        seen.add(newHashCode);\n                    }\n                }\n            });\n            i++;\n        }\n        return possibleFutures;\n    };\n    var getHighestBlue = function (well) {\n        var row;\n        for (row = 0; row < well.length; row++) {\n            if (well[row] !== 0) {\n                break;\n            }\n        }\n        return row;\n    };\n    // deeper lines are worth less than immediate lines\n    // this is so the game will never give you a line if it can avoid it\n    // NOTE: make sure rating doesn't return a range of more than 100 values...\n    var getWellRating = function (well, depthRemaining) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return getHighestBlue(well) + (depthRemaining === 0 ? 0 : getWorstPieceDetails(well, depthRemaining - 1).rating / 100);\n    };\n    /**\n      Given a well and a piece, find the best possible location to put it.\n      Return the best rating found.\n    */\n    var getBestWellRating = function (well, pieceId, depthRemaining) {\n        return Math.max.apply(Math, getPossibleFutures(well, pieceId).map(function (possibleFuture) {\n            return getWellRating(possibleFuture.well, depthRemaining);\n        }));\n    };\n    // pick the worst piece that could be put into this well\n    var getWorstPieceDetails = function (well, depthRemaining) {\n        return Object\n            .keys(rotationSystem.rotations)\n            .map(function (pieceId) { return ({\n            pieceId: Number(pieceId),\n            rating: getBestWellRating(well, Number(pieceId), depthRemaining)\n        }); })\n            .sort(function (a, b) { return b.rating - a.rating; })[0];\n    };\n    return function (well) {\n        return getWorstPieceDetails(well, options.searchDepth).pieceId;\n    };\n}; };\nvar Hatetris0 = HatetrisAi({ searchDepth: 0 });\nvar Hatetris1 = HatetrisAi({ searchDepth: 1 });\n\n\n//# sourceURL=webpack://hatetris/./src/enemy-ais/hatetris-ai.ts?");

/***/ }),

/***/ "./src/index.tsx":
/*!***********************!*\
  !*** ./src/index.tsx ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.css */ \"./src/index.css\");\n/* harmony import */ var _components_Game_Game__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/Game/Game */ \"./src/components/Game/Game.tsx\");\n/* harmony import */ var _enemy_ais_hatetris_ai__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./enemy-ais/hatetris-ai */ \"./src/enemy-ais/hatetris-ai.ts\");\n/* harmony import */ var _rotation_systems_hatetris_rotation_system__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rotation-systems/hatetris-rotation-system */ \"./src/rotation-systems/hatetris-rotation-system.ts\");\n/**\n  HATETRIS\n*/\n\n\n\n\n\n\n\nreact_dom__WEBPACK_IMPORTED_MODULE_1__.render((react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_Game_Game__WEBPACK_IMPORTED_MODULE_3__.default, { bar: 4, EnemyAi: _enemy_ais_hatetris_ai__WEBPACK_IMPORTED_MODULE_4__.Hatetris1, replayTimeout: 50, rotationSystem: _rotation_systems_hatetris_rotation_system__WEBPACK_IMPORTED_MODULE_5__.default, wellDepth: 20, wellWidth: 10 })), document.querySelector('.index__root'));\n\n\n//# sourceURL=webpack://hatetris/./src/index.tsx?");

/***/ }),

/***/ "./src/replay-codecs/base2048.ts":
/*!***************************************!*\
  !*** ./src/replay-codecs/base2048.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encode\": () => (/* binding */ encode),\n/* harmony export */   \"decode\": () => (/* binding */ decode)\n/* harmony export */ });\n/* harmony import */ var base2048__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! base2048 */ \"./node_modules/base2048/dist/es6/base2048.js\");\n/* harmony import */ var _uint8Array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uint8Array */ \"./src/replay-codecs/uint8Array.ts\");\n/**\n  New new Base2048 replays!\n*/\n\n\nvar encode = function (keys) {\n    return base2048__WEBPACK_IMPORTED_MODULE_0__.encode(_uint8Array__WEBPACK_IMPORTED_MODULE_1__.encode(keys));\n};\nvar decode = function (string) {\n    return _uint8Array__WEBPACK_IMPORTED_MODULE_1__.decode(base2048__WEBPACK_IMPORTED_MODULE_0__.decode(string));\n};\n\n\n//# sourceURL=webpack://hatetris/./src/replay-codecs/base2048.ts?");

/***/ }),

/***/ "./src/replay-codecs/base65536.ts":
/*!****************************************!*\
  !*** ./src/replay-codecs/base65536.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encode\": () => (/* binding */ encode),\n/* harmony export */   \"decode\": () => (/* binding */ decode)\n/* harmony export */ });\n/* harmony import */ var base65536__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! base65536 */ \"./node_modules/base65536/dist/es6/base65536.js\");\n/* harmony import */ var _uint8Array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uint8Array */ \"./src/replay-codecs/uint8Array.ts\");\n/**\n  New Base65536 replays.\n*/\n\n\nvar encode = function (keys) {\n    return base65536__WEBPACK_IMPORTED_MODULE_0__.encode(_uint8Array__WEBPACK_IMPORTED_MODULE_1__.encode(keys));\n};\nvar decode = function (string) {\n    return _uint8Array__WEBPACK_IMPORTED_MODULE_1__.decode(base65536__WEBPACK_IMPORTED_MODULE_0__.decode(string));\n};\n\n\n//# sourceURL=webpack://hatetris/./src/replay-codecs/base65536.ts?");

/***/ }),

/***/ "./src/replay-codecs/hatetris-replay-codec.ts":
/*!****************************************************!*\
  !*** ./src/replay-codecs/hatetris-replay-codec.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex */ \"./src/replay-codecs/hex.ts\");\n/* harmony import */ var _base65536__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base65536 */ \"./src/replay-codecs/base65536.ts\");\n/* harmony import */ var _base2048__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base2048 */ \"./src/replay-codecs/base2048.ts\");\n/**\n  Replay handling. This codec is a combination of three other codecs\n*/\n\n\n\n\n/**\n  Convert an array of moves into a replay\n*/\n// const encode = (moves: string[]): string => hex.encode(moves)\n// const encode = (moves: string[]): string => base65536.encode(moves)\nvar encode = function (moves) { return _base2048__WEBPACK_IMPORTED_MODULE_2__.encode(moves); };\n/**\n  Convert a string back into an array of moves\n*/\nvar decode = function (string) {\n    if (/^[0123456789ABCDEF# ]*$/.test(string)) {\n        return _hex__WEBPACK_IMPORTED_MODULE_0__.default.decode(string);\n    }\n    try {\n        return _base65536__WEBPACK_IMPORTED_MODULE_1__.decode(string);\n    }\n    catch (e) {\n        // not Base65536, no problem\n    }\n    return _base2048__WEBPACK_IMPORTED_MODULE_2__.decode(string);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ encode: encode, decode: decode });\n\n\n//# sourceURL=webpack://hatetris/./src/replay-codecs/hatetris-replay-codec.ts?");

/***/ }),

/***/ "./src/replay-codecs/hex.ts":
/*!**********************************!*\
  !*** ./src/replay-codecs/hex.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n  Old hex-mode replays.\n*/\n\nvar hexChars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\nvar forwardLookup = {\n    L: { L: '0', R: '1', D: '2', U: '3' },\n    R: { L: '4', R: '5', D: '6', U: '7' },\n    D: { L: '8', R: '9', D: 'A', U: 'B' },\n    U: { L: 'C', R: 'D', D: 'E', U: 'F' }\n};\nvar reverseLookup = {\n    0: ['L', 'L'],\n    1: ['L', 'R'],\n    2: ['L', 'D'],\n    3: ['L', 'U'],\n    4: ['R', 'L'],\n    5: ['R', 'R'],\n    6: ['R', 'D'],\n    7: ['R', 'U'],\n    8: ['D', 'L'],\n    9: ['D', 'R'],\n    A: ['D', 'D'],\n    B: ['D', 'U'],\n    C: ['U', 'L'],\n    D: ['U', 'R'],\n    E: ['U', 'D'],\n    F: ['U', 'U']\n};\n/**\n  Convert an array of moves into a replay\n*/\nvar encode = function (inputMoves) { return inputMoves\n    .map(function (move1, i) {\n    if (i % 2 === 1) {\n        return '';\n    }\n    // trailing unpaired move behaves as if an extra \"D\" was appended\n    var move2 = i + 1 in inputMoves ? inputMoves[i + 1] : 'D';\n    return forwardLookup[move1][move2];\n})\n    .join('')\n    .replace(/(....)/g, '$1 '); };\n/**\n  Convert a string back into an array of moves\n*/\nvar decode = function (string) { return string\n    .split('')\n    .map(function (chr) { return hexChars.includes(chr) ? reverseLookup[chr] : []; })\n    .flat(); };\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ encode: encode, decode: decode });\n\n\n//# sourceURL=webpack://hatetris/./src/replay-codecs/hex.ts?");

/***/ }),

/***/ "./src/replay-codecs/uint8Array.ts":
/*!*****************************************!*\
  !*** ./src/replay-codecs/uint8Array.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encode\": () => (/* binding */ encode),\n/* harmony export */   \"decode\": () => (/* binding */ decode)\n/* harmony export */ });\n/* harmony import */ var _utils_run_length__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils/run-length */ \"./src/utils/run-length.ts\");\n\nvar forwardEntryLookup = {\n    L: 0,\n    R: 4,\n    D: 8,\n    U: 12\n};\nvar forwardLengthLookup = {\n    1: 0,\n    2: 1,\n    3: 2,\n    4: 3\n};\nvar reverseEntryLookup = {\n    0: 'L',\n    4: 'R',\n    8: 'D',\n    12: 'U'\n};\nvar reverseNumberLookup = {\n    0: 1,\n    1: 2,\n    2: 3,\n    3: 4\n};\n/**\n  Convert an array of key strokes into a Uint8Array using RLE\n*/\nvar encode = function (keys) {\n    var rle = _utils_run_length__WEBPACK_IMPORTED_MODULE_0__.default.encode(keys, 4);\n    var nybbles = rle.map(function (run) { return (forwardEntryLookup[run.entry] +\n        forwardLengthLookup[run.length]); });\n    // Can't have an odd number of nybbles. This would break in mid-byte!\n    // This is an extra 'L' on the end\n    if (nybbles.length % 2 === 1) {\n        nybbles.push(0);\n    }\n    var octets = [];\n    for (var i = 0; i < nybbles.length; i += 2) {\n        octets.push((nybbles[i] << 4) +\n            (nybbles[i + 1] << 0));\n    }\n    return new Uint8Array(octets);\n};\n/**\n  Convert an RLE'd Uint8Array back into a list of keystrokes\n*/\nvar decode = function (uint8Array) {\n    var octets = [];\n    for (var i = 0; i < uint8Array.length; i++) {\n        octets.push(uint8Array[i]);\n    }\n    // Extract two 4-bit numbers\n    var nybbles = [];\n    octets.forEach(function (octet) {\n        nybbles.push((octet & 240) >> 4);\n        nybbles.push((octet & 15) >> 0);\n    });\n    var rle = nybbles.map(function (nybble) { return ({\n        entry: reverseEntryLookup[nybble & 12],\n        length: reverseNumberLookup[nybble & 3]\n    }); });\n    return _utils_run_length__WEBPACK_IMPORTED_MODULE_0__.default.decode(rle);\n};\n\n\n//# sourceURL=webpack://hatetris/./src/replay-codecs/uint8Array.ts?");

/***/ }),

/***/ "./src/rotation-systems/hatetris-rotation-system.ts":
/*!**********************************************************!*\
  !*** ./src/rotation-systems/hatetris-rotation-system.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n  The HATETRIS rotation system\n*/\n\n// Note that the order here is significant,\n// the least convenient piece is placed first.\nvar rotations = [\n    // S = 0\n    [\n        [\n            '....',\n            '..##',\n            '.##.',\n            '....'\n        ], [\n            '....',\n            '.#..',\n            '.##.',\n            '..#.'\n        ], [\n            '....',\n            '.##.',\n            '##..',\n            '....'\n        ], [\n            '.#..',\n            '.##.',\n            '..#.',\n            '....'\n        ]\n    ],\n    // Z = 1\n    [\n        [\n            '....',\n            '.##.',\n            '..##',\n            '....'\n        ], [\n            '....',\n            '..#.',\n            '.##.',\n            '.#..'\n        ], [\n            '....',\n            '##..',\n            '.##.',\n            '....'\n        ], [\n            '..#.',\n            '.##.',\n            '.#..',\n            '....'\n        ]\n    ],\n    // O = 2\n    [\n        [\n            '....',\n            '.##.',\n            '.##.',\n            '....'\n        ], [\n            '....',\n            '.##.',\n            '.##.',\n            '....'\n        ], [\n            '....',\n            '.##.',\n            '.##.',\n            '....'\n        ], [\n            '....',\n            '.##.',\n            '.##.',\n            '....'\n        ]\n    ],\n    // I = 3\n    [\n        [\n            '....',\n            '####',\n            '....',\n            '....'\n        ], [\n            '..#.',\n            '..#.',\n            '..#.',\n            '..#.'\n        ], [\n            '....',\n            '....',\n            '####',\n            '....'\n        ], [\n            '.#..',\n            '.#..',\n            '.#..',\n            '.#..'\n        ]\n    ],\n    // L = 4\n    [\n        [\n            '....',\n            '.###',\n            '.#..',\n            '....'\n        ], [\n            '....',\n            '.##.',\n            '..#.',\n            '..#.'\n        ], [\n            '....',\n            '..#.',\n            '###.',\n            '....'\n        ], [\n            '.#..',\n            '.#..',\n            '.##.',\n            '....'\n        ]\n    ],\n    // J = 5\n    [\n        [\n            '....',\n            '.##.',\n            '.#..',\n            '.#..'\n        ], [\n            '....',\n            '###.',\n            '..#.',\n            '....'\n        ], [\n            '..#.',\n            '..#.',\n            '.##.',\n            '....'\n        ], [\n            '....',\n            '.#..',\n            '.###',\n            '....'\n        ]\n    ],\n    // T = 6\n    [\n        [\n            '....',\n            '.###',\n            '..#.',\n            '....'\n        ], [\n            '....',\n            '..#.',\n            '.##.',\n            '..#.'\n        ], [\n            '....',\n            '.#..',\n            '###.',\n            '....'\n        ], [\n            '.#..',\n            '.##.',\n            '.#..',\n            '....'\n        ]\n    ]\n].map(function (visuals) { return visuals\n    .map(function (visual) {\n    var xMin = Infinity; // leftmost extent (0, 1, 2 or 3)\n    var xMax = -Infinity; // rightmost extent (1, 2, 3 or 4)\n    var yMin = Infinity; // topmost extent (0, 1, 2 or 3)\n    var yMax = -Infinity; // bottommost extent (1, 2, 3 or 4)\n    // binary representation of the bits on each row\n    var allRows = visual.map(function (visualRow, y) {\n        var row = 0;\n        visualRow.split('').forEach(function (chr, x) {\n            if (chr === '#') {\n                row += 1 << x;\n                xMin = Math.min(xMin, x);\n                xMax = Math.max(xMax, x + 1);\n                yMin = Math.min(yMin, y);\n                yMax = Math.max(yMax, y + 1);\n            }\n        });\n        return row;\n    });\n    // truncate top rows\n    // truncate bottom rows\n    // shift right as many times as necessary\n    var rows = allRows.slice(yMin, yMax).map(function (row) { return row >> xMin; });\n    return {\n        xMin: xMin,\n        yMin: yMin,\n        xDim: xMax - xMin,\n        yDim: yMax - yMin,\n        rows: rows\n    };\n}); });\nvar placeNewPiece = function (wellWidth, pieceId) { return ({\n    id: pieceId,\n    x: Math.floor((wellWidth - 4) / 2),\n    y: 0,\n    o: 0\n}); };\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    placeNewPiece: placeNewPiece,\n    rotations: rotations\n});\n\n\n//# sourceURL=webpack://hatetris/./src/rotation-systems/hatetris-rotation-system.ts?");

/***/ }),

/***/ "./src/utils/run-length.ts":
/*!*********************************!*\
  !*** ./src/utils/run-length.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\nvar encode = function (arr, maxRunLength) {\n    var runs = [];\n    arr.forEach(function (entry) {\n        if (runs.length - 1 in runs &&\n            runs[runs.length - 1].entry === entry &&\n            runs[runs.length - 1].length < maxRunLength) {\n            runs[runs.length - 1].length++;\n        }\n        else {\n            runs.push({\n                entry: entry,\n                length: 1\n            });\n        }\n    });\n    return runs;\n};\nvar decode = function (runs) {\n    return runs.flatMap(function (run) { return Array(run.length).fill(run.entry); });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ encode: encode, decode: decode });\n\n\n//# sourceURL=webpack://hatetris/./src/utils/run-length.ts?");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "React" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = React;

/***/ }),

/***/ "react-dom":
/*!***************************!*\
  !*** external "ReactDOM" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = ReactDOM;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.tsx");
/******/ 	
/******/ })()
;